package com.mongodb.jdbc;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.util.List;

import com.mongodb.DB;
import com.mongodb.util.SqlParserUtil;
import com.mongodb.util.SqlSegment;

public class MongoDbStatement implements Statement {
	
	private final DB db;

	private final MongoDbConnection con;
	
	private MongoDbResultSet lastResultSet;
	
	protected String dbName = null;

	public MongoDbStatement(final MongoDbConnection connection) throws SQLException {
		if ((connection == null) || connection.isClosed()) {
			throw new SQLException("mongoDb_not_open");
		}
		
		this.con = connection;
		this.db = connection.getDb();
	}

	@Override
	public <T> T unwrap(Class<T> iface) throws SQLException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public boolean isWrapperFor(Class<?> iface) throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public ResultSet executeQuery(final String sql) throws SQLException {
		
		lastResultSet = new MongoDbResultSet();
		checkNullOrEmptyQuery(sql);
		
		List<SqlSegment> sqls = SqlParserUtil.getParsedSqlList(sql);

		con.getDb().getCollectionFromString(s);
		
		return null;
	}

	private void checkNullOrEmptyQuery(String sql) {
		// TODO 自动生成的方法存根
		
	}

	@Override
	public int executeUpdate(String sql) throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public void close() throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public int getMaxFieldSize() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public void setMaxFieldSize(int max) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public int getMaxRows() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public void setMaxRows(int max) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public void setEscapeProcessing(boolean enable) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public int getQueryTimeout() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public void setQueryTimeout(int seconds) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public void cancel() throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public SQLWarning getWarnings() throws SQLException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public void clearWarnings() throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public void setCursorName(String name) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public boolean execute(String sql) throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public ResultSet getResultSet() throws SQLException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public int getUpdateCount() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public boolean getMoreResults() throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public void setFetchDirection(int direction) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public int getFetchDirection() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public void setFetchSize(int rows) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public int getFetchSize() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public int getResultSetConcurrency() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public int getResultSetType() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public void addBatch(String sql) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public void clearBatch() throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public int[] executeBatch() throws SQLException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public Connection getConnection() throws SQLException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public boolean getMoreResults(int current) throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public ResultSet getGeneratedKeys() throws SQLException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public int executeUpdate(String sql, int autoGeneratedKeys)
			throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public int executeUpdate(String sql, int[] columnIndexes)
			throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public int executeUpdate(String sql, String[] columnNames)
			throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public boolean execute(String sql, int autoGeneratedKeys)
			throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public boolean execute(String sql, String[] columnNames)
			throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public int getResultSetHoldability() throws SQLException {
		// TODO 自动生成的方法存根
		return 0;
	}

	@Override
	public boolean isClosed() throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

	@Override
	public void setPoolable(boolean poolable) throws SQLException {
		// TODO 自动生成的方法存根

	}

	@Override
	public boolean isPoolable() throws SQLException {
		// TODO 自动生成的方法存根
		return false;
	}

}
